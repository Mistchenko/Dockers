#rsyslog v3 config file

# if you experience problems, check
# http://www.rsyslog.com/troubleshoot for assistance

#### MODULES ####

$ModLoad imuxsock       # provides support for local system logging (e.g. via logger command)
$ModLoad imklog         # provides kernel logging support (previously done by rklogd)
#$ModLoad immark        # provides --MARK-- message capability

# Provides imuxsock rate limiting settings
$SystemLogRateLimitInterval 1
$SystemLogRateLimitBurst 1000

# Provides UDP syslog reception
#$ModLoad imudp
#$UDPServerRun 514

# Provides TCP syslog reception
#$ModLoad imtcp
#$InputTCPServerRun 514


#### GLOBAL DIRECTIVES ####

# Use default timestamp format
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat

# File syncing capability is disabled by default. This feature is usually not required,
# not useful and an extreme performance hit
#$ActionFileEnableSync on

$template myFormat,"%syslogtag:F,58:2%%msg%\n"

# Set max size of log message
$MaxMessageSize 16k

# Switch off control chars
$EscapeControlCharactersOnReceive off

#### RULES ####

# Log all kernel messages to the console.
# Logging much else clutters up the screen.
#kern.*                                                 /dev/console

# Log anything (except mail) of level info or higher.
# Don't log private authentication messages!
*.info;mail.none;authpriv.none;cron.none                /var/log/messages

# The authpriv file has restricted access.
authpriv.*                                              /var/log/secure

# Log all the mail messages in one place.
mail.*                                                  -/var/log/maillog


# Log cron stuff
cron.*                                                  /var/log/cron

# Everybody gets emergency messages
*.emerg                                                 *

# Save news errors of level crit and higher in a special file.
uucp,news.crit                                          /var/log/spooler

# Save boot messages also to boot.log
local7.*                                                /var/log/boot.log

#local2.*                                               /var/log/ap/ws.log
if $syslogfacility-text == 'local2' and $programname == 'dev'  then /var/log/ap/dev/ws.log;myFormat
if $syslogfacility-text == 'local2' and $programname == 'rel'  then /var/log/ap/rel/ws.log;myFormat
if $syslogfacility-text == 'local2' and $programname == 'fix'  then /var/log/ap/fix/ws.log;myFormat
if $syslogfacility-text == 'local2' and $programname == 'ap3-dev'  then /var/log/ap/ap3-dev/ws.log;myFormat

#local3.*                                               /var/log/ap/ping.log
if $syslogfacility-text == 'local3' and $programname == 'dev'  then /var/log/ap/dev/ping.log;myFormat
if $syslogfacility-text == 'local3' and $programname == 'rel'  then /var/log/ap/rel/ping.log;myFormat
if $syslogfacility-text == 'local3' and $programname == 'fix'  then /var/log/ap/fix/ping.log;myFormat
if $syslogfacility-text == 'local3' and $programname == 'ap3-dev'  then /var/log/ap/ap3-dev/ping.log;myFormat

#local4.*
if $syslogfacility-text == 'local4' and $programname == 'db'       then /var/log/apps/db.log;myFormat
if $syslogfacility-text == 'local4' and $programname == 'client'   then /var/log/apps/client.log;myFormat
if $syslogfacility-text == 'local4' and $programname == 'launcher' then /var/log/apps/launcher.log;myFormat

#local6.*                                               /var/log/ap/saml.log
if $syslogfacility-text == 'local6' and $programname == 'dev'  then /var/log/ap/dev/saml.log;myFormat
if $syslogfacility-text == 'local6' and $programname == 'rel'  then /var/log/ap/rel/saml.log;myFormat
if $syslogfacility-text == 'local6' and $programname == 'fix'  then /var/log/ap/fix/saml.log;myFormat
if $syslogfacility-text == 'local6' and $programname == 'ap3-dev'  then /var/log/ap/ap3-dev/saml.log;myFormat


# ### begin forwarding rule ###
# The statement between the begin ... end define a SINGLE forwarding
# rule. They belong together, do NOT split them. If you create multiple
# forwarding rules, duplicate the whole block!
# Remote Logging (we use TCP for reliable delivery)
#
# An on-disk queue is created for this action. If the remote host is
# down, messages are spooled to disk and sent when it is up again.
#$WorkDirectory /var/spppl/rsyslog # where to place spool files
#$ActionQueueFileName fwdRule1 # unique name prefix for spool files
#$ActionQueueMaxDiskSpace 1g   # 1gb space limit (use as much as possible)
#$ActionQueueSaveOnShutdown on # save messages to disk on shutdown
#$ActionQueueType LinkedList   # run asynchronously
#$ActionResumeRetryCount -1    # infinite retries if host is down
# remote host is: name/ip:port, e.g. 192.168.0.1:514, port optional
#*.* @@remote-host:514
# ### end of the forwarding rule ###
